// ----------------------------------------------------------
// This Source Code Form is subject to the terms of the
// Mozilla Public License, v.2.0. If a copy of the MPL
// was not distributed with this file, You can obtain one
// at http://mozilla.org/MPL/2.0/.
// ----------------------------------------------------------
// Codebase: https://github.com/ArKuznetsov/cpdb/
// ----------------------------------------------------------

Перем Лог;       // - Объект      - объект записи лога приложения

#Область СлужебныйПрограммныйИнтерфейс

// Процедура - устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект описание команды
//
Процедура ОписаниеКоманды(Команда) Экспорт
	
	Команда.Опция("d drive map-drive", "", "имя устройства (буква диска)")
	       .ТСтрока()
	       .Обязательный()
	       .ВОкружении("CPDB_FILE_MAP_DRIVE");
	
	Команда.Опция("r res map-res", "", "путь к подключаемому ресурсу")
	       .ТСтрока()
	       .Обязательный()
	       .ВОкружении("CPDB_FILE_MAP_RES");
	
	Команда.Опция("u user map-user", "", "пользователь для подключения")
	       .ТСтрока()
	       .ВОкружении("CPDB_FILE_MAP_USER");
	
	Команда.Опция("p pwd map-pwd", "", "пароль пользователя для подключения")
	       .ТСтрока()
	       .ВОкружении("CPDB_FILE_MAP_PWD");

КонецПроцедуры // ОписаниеКоманды()

// Процедура - запускает выполнение команды устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект  описание команды
//
Процедура ВыполнитьКоманду(Знач Команда) Экспорт

	ВыводОтладочнойИнформации = Команда.ЗначениеОпции("verbose");

	ПараметрыПриложения.УстановитьРежимОтладки(ВыводОтладочнойИнформации);

	ИмяУстройства      = Команда.ЗначениеОпции("drive");
	ИмяРесурса         = Команда.ЗначениеОпции("res");
	Пользователь       = Команда.ЗначениеОпции("user");
	ПарольПользователя = Команда.ЗначениеОпции("pwd");

	Попытка
		
		ПодключитьДиск(ИмяУстройства, ИмяРесурса, Пользователь, ПарольПользователя);

	Исключение
		ТекстОшибки = СтрШаблон("Ошибка ошибка подключения ресурса ""%1"" к устройству %2: %3%4",
		                        ИмяРесурса,
		                        ИмяУстройства,
		                        Символы.ПС,
		                        ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИСключение ТекстОшибки;
	КонецПопытки;

КонецПроцедуры // ВыполнитьКоманду()

#КонецОбласти // СлужебныйПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

// Процедура подключает указанный сетевой диск
//   
// Параметры:
//   ИмяУстройства         - Строка    - имя (буква) подключаемого диска
//   ИмяРесурса            - Строка    - сетевой путь к подключаемому ресурсу
//   Пользователь          - Строка    - пользователь от имени которого выполняется подключение
//   ПарольПользователя    - Строка    - пароль пользователя от имени которого выполняется подключение
//
Процедура ПодключитьДиск(ИмяУстройства, ИмяРесурса, Пользователь, ПарольПользователя) Экспорт

	КомандаРК = Новый Команда;
	
	КомандаРК.УстановитьКоманду("net");
	КомандаРК.ДобавитьПараметр("use");
	КомандаРК.ДобавитьПараметр(ИмяУстройства);
	КомандаРК.ДобавитьПараметр(ИмяРесурса);
	КомандаРК.ДобавитьПараметр(ПарольПользователя);
	КомандаРК.ДобавитьПараметр("/USER:" + Пользователь);

	КомандаРК.УстановитьИсполнениеЧерезКомандыСистемы( Ложь );
	КомандаРК.ПоказыватьВыводНемедленно( Ложь );
	
	КодВозврата = КомандаРК.Исполнить();

	ОписаниеРезультата = КомандаРК.ПолучитьВывод();
	
	Если КодВозврата = 0 Тогда
		Лог.Информация("Подключение сетевого ресурса ""%1"" к устройству ""%2"": %3",
		               ИмяРесурса,
		               ИмяУстройства,
		               ОписаниеРезультата);
	Иначе
		ВызватьИсключение СтрШаблон("Ошибка ошибка подключения ресурса ""%1"" к устройству ""%2"", код ошибки %3: %4%5",
		                            ИмяРесурса,
		                            ИмяУстройства,
		                            КодВозврата,
		                            Символы.ПС,
		                            ОписаниеРезультата);
	КонецЕсли;
	
КонецПроцедуры // ПодключитьДиск()

#КонецОбласти // СлужебныеПроцедурыИФункции

#Область ОбработчикиСобытий

// Процедура - обработчик события "ПриСозданииОбъекта"
//
// BSLLS:UnusedLocalMethod-off
Процедура ПриСозданииОбъекта()

	Лог = ПараметрыПриложения.Лог();

КонецПроцедуры // ПриСозданииОбъекта()
// BSLLS:UnusedLocalMethod-on

#КонецОбласти // ОбработчикиСобытий
